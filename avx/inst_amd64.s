#include "textflag.h"

#define FPTOX1X2 \
	MOVQ a+0(FP), SI;\
	MOVQ b+24(FP), DI;\
	MOVOU (SI), X1;\
	MOVOU (DI), X2;\

#define RETX1X2 \
	MOVOU X1, (SI);\
	MOVOU X2, (DI);\
	RET;\

#define FPTOY1Y2 \
	MOVQ a+0(FP), SI;\
	MOVQ b+24(FP), DI;\
	MOVOU (SI), Y1;\
	MOVOU (DI), Y2;\

#define RETY1Y2 \
	MOVOU Y1, (SI);\
	MOVOU Y2, (DI);\
	RET;\



TEXT ·VCOMISDm64byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VCOMISD X2, X1
	RETX1X2
	

TEXT ·VCOMISDm64float64(SB),NOSPLIT,$0-48
	FPTOX1X2
	VCOMISD X2, X1
	RETX1X2
	


TEXT ·VCOMISSm32byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VCOMISS X2, X1
	RETX1X2
	

TEXT ·VCOMISSm32float32(SB),NOSPLIT,$0-48
	FPTOX1X2
	VCOMISS X2, X1
	RETX1X2
	


TEXT ·VCVTDQ2PDm64byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VCVTDQ2PD X2, X1
	RETX1X2
	

TEXT ·VCVTDQ2PDm64int32(SB),NOSPLIT,$0-48
	FPTOX1X2
	VCVTDQ2PD X2, X1
	RETX1X2
	


TEXT ·VCVTDQ2PSm128byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VCVTDQ2PS X2, X1
	RETX1X2
	


TEXT ·VCVTDQ2PSm256byte(SB),NOSPLIT,$0-48
	
	MOVQ a+0(FP), SI
	MOVQ b+24(FP), DI
	MOVOU (SI), Y1
	MOVOU (DI), Y2
	VCVTDQ2PS Y2, Y1
	MOVOU Y1, (SI)
	RET
	


TEXT ·VCVTPD2DQm128byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VCVTPD2DQ X2, X1
	RETX1X2
	

TEXT ·VCVTPD2DQm128int64(SB),NOSPLIT,$0-48
	FPTOX1X2
	VCVTPD2DQ X2, X1
	RETX1X2
	


TEXT ·VCVTPD2PSm128byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VCVTPD2PS X2, X1
	RETX1X2
	

TEXT ·VCVTPD2PSm128float32(SB),NOSPLIT,$0-48
	FPTOX1X2
	VCVTPD2PS X2, X1
	RETX1X2
	


TEXT ·VCVTPS2DQm128byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VCVTPS2DQ X2, X1
	RETX1X2
	

TEXT ·VCVTPS2DQm128float32(SB),NOSPLIT,$0-48
	FPTOX1X2
	VCVTPS2DQ X2, X1
	RETX1X2
	


TEXT ·VCVTPS2DQm256byte(SB),NOSPLIT,$0-48
	
	MOVQ a+0(FP), SI
	MOVQ b+24(FP), DI
	MOVOU (SI), Y1
	MOVOU (DI), Y2
	VCVTPS2DQ Y2, Y1
	MOVOU Y1, (SI)
	RET
	

TEXT ·VCVTPS2DQm256float32(SB),NOSPLIT,$0-48
	
	MOVQ a+0(FP), SI
	MOVQ b+24(FP), DI
	MOVOU (SI), Y1
	MOVOU (DI), Y2
	VCVTPS2DQ Y2, Y1
	MOVOU Y1, (SI)
	RET
	


TEXT ·VCVTPS2PDm64byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VCVTPS2PD X2, X1
	RETX1X2
	

TEXT ·VCVTPS2PDm64float32(SB),NOSPLIT,$0-48
	FPTOX1X2
	VCVTPS2PD X2, X1
	RETX1X2
	


TEXT ·VCVTTPD2DQm128byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VCVTTPD2DQ X2, X1
	RETX1X2
	

TEXT ·VCVTTPD2DQm128int64(SB),NOSPLIT,$0-48
	FPTOX1X2
	VCVTTPD2DQ X2, X1
	RETX1X2
	


TEXT ·VCVTTPS2DQm128byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VCVTTPS2DQ X2, X1
	RETX1X2
	

TEXT ·VCVTTPS2DQm128float32(SB),NOSPLIT,$0-48
	FPTOX1X2
	VCVTTPS2DQ X2, X1
	RETX1X2
	


TEXT ·VCVTTPS2DQm256byte(SB),NOSPLIT,$0-48
	
	MOVQ a+0(FP), SI
	MOVQ b+24(FP), DI
	MOVOU (SI), Y1
	MOVOU (DI), Y2
	VCVTTPS2DQ Y2, Y1
	MOVOU Y1, (SI)
	RET
	

TEXT ·VCVTTPS2DQm256float32(SB),NOSPLIT,$0-48
	
	MOVQ a+0(FP), SI
	MOVQ b+24(FP), DI
	MOVOU (SI), Y1
	MOVOU (DI), Y2
	VCVTTPS2DQ Y2, Y1
	MOVOU Y1, (SI)
	RET
	


TEXT ·VMASKMOVDQUbyte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VMASKMOVDQU X2, X1
	RETX1X2
	


TEXT ·VMOVAPDm128byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VMOVAPD X2, X1
	RETX1X2
	

TEXT ·VMOVAPDm128float64(SB),NOSPLIT,$0-48
	FPTOX1X2
	VMOVAPD X2, X1
	RETX1X2
	


TEXT ·VMOVAPDm256byte(SB),NOSPLIT,$0-48
	
	MOVQ a+0(FP), SI
	MOVQ b+24(FP), DI
	MOVOU (SI), Y1
	MOVOU (DI), Y2
	VMOVAPD Y2, Y1
	MOVOU Y1, (SI)
	RET
	

TEXT ·VMOVAPDm256float64(SB),NOSPLIT,$0-48
	
	MOVQ a+0(FP), SI
	MOVQ b+24(FP), DI
	MOVOU (SI), Y1
	MOVOU (DI), Y2
	VMOVAPD Y2, Y1
	MOVOU Y1, (SI)
	RET
	


TEXT ·VMOVAPSm128byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VMOVAPS X2, X1
	RETX1X2
	

TEXT ·VMOVAPSm128float32(SB),NOSPLIT,$0-48
	FPTOX1X2
	VMOVAPS X2, X1
	RETX1X2
	


TEXT ·VMOVAPSm256byte(SB),NOSPLIT,$0-48
	
	MOVQ a+0(FP), SI
	MOVQ b+24(FP), DI
	MOVOU (SI), Y1
	MOVOU (DI), Y2
	VMOVAPS Y2, Y1
	MOVOU Y1, (SI)
	RET
	

TEXT ·VMOVAPSm256float32(SB),NOSPLIT,$0-48
	
	MOVQ a+0(FP), SI
	MOVQ b+24(FP), DI
	MOVOU (SI), Y1
	MOVOU (DI), Y2
	VMOVAPS Y2, Y1
	MOVOU Y1, (SI)
	RET
	


TEXT ·VMOVDDUPm64byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VMOVDDUP X2, X1
	RETX1X2
	


TEXT ·VMOVDDUPm256byte(SB),NOSPLIT,$0-48
	
	MOVQ a+0(FP), SI
	MOVQ b+24(FP), DI
	MOVOU (SI), Y1
	MOVOU (DI), Y2
	VMOVDDUP Y2, Y1
	MOVOU Y1, (SI)
	RET
	


TEXT ·VMOVDQAm128byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VMOVDQA X2, X1
	RETX1X2
	


TEXT ·VMOVDQAm256byte(SB),NOSPLIT,$0-48
	
	MOVQ a+0(FP), SI
	MOVQ b+24(FP), DI
	MOVOU (SI), Y1
	MOVOU (DI), Y2
	VMOVDQA Y2, Y1
	MOVOU Y1, (SI)
	RET
	


TEXT ·VMOVDQUm128byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VMOVDQU X2, X1
	RETX1X2
	


TEXT ·VMOVDQUm256byte(SB),NOSPLIT,$0-48
	
	MOVQ a+0(FP), SI
	MOVQ b+24(FP), DI
	MOVOU (SI), Y1
	MOVOU (DI), Y2
	VMOVDQU Y2, Y1
	MOVOU Y1, (SI)
	RET
	


TEXT ·VMOVQbyte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VMOVQ X2, X1
	RETX1X2
	


TEXT ·VMOVQm64byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VMOVQ X2, X1
	RETX1X2
	


TEXT ·VMOVSHDUPm128byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VMOVSHDUP X2, X1
	RETX1X2
	


TEXT ·VMOVSHDUPm256byte(SB),NOSPLIT,$0-48
	
	MOVQ a+0(FP), SI
	MOVQ b+24(FP), DI
	MOVOU (SI), Y1
	MOVOU (DI), Y2
	VMOVSHDUP Y2, Y1
	MOVOU Y1, (SI)
	RET
	


TEXT ·VMOVSLDUPm128byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VMOVSLDUP X2, X1
	RETX1X2
	


TEXT ·VMOVSLDUPm256byte(SB),NOSPLIT,$0-48
	
	MOVQ a+0(FP), SI
	MOVQ b+24(FP), DI
	MOVOU (SI), Y1
	MOVOU (DI), Y2
	VMOVSLDUP Y2, Y1
	MOVOU Y1, (SI)
	RET
	


TEXT ·VMOVUPDm128byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VMOVUPD X2, X1
	RETX1X2
	

TEXT ·VMOVUPDm128float64(SB),NOSPLIT,$0-48
	FPTOX1X2
	VMOVUPD X2, X1
	RETX1X2
	


TEXT ·VMOVUPDm256byte(SB),NOSPLIT,$0-48
	
	MOVQ a+0(FP), SI
	MOVQ b+24(FP), DI
	MOVOU (SI), Y1
	MOVOU (DI), Y2
	VMOVUPD Y2, Y1
	MOVOU Y1, (SI)
	RET
	

TEXT ·VMOVUPDm256float64(SB),NOSPLIT,$0-48
	
	MOVQ a+0(FP), SI
	MOVQ b+24(FP), DI
	MOVOU (SI), Y1
	MOVOU (DI), Y2
	VMOVUPD Y2, Y1
	MOVOU Y1, (SI)
	RET
	


TEXT ·VMOVUPSm128byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VMOVUPS X2, X1
	RETX1X2
	

TEXT ·VMOVUPSm128float32(SB),NOSPLIT,$0-48
	FPTOX1X2
	VMOVUPS X2, X1
	RETX1X2
	


TEXT ·VMOVUPSm256byte(SB),NOSPLIT,$0-48
	
	MOVQ a+0(FP), SI
	MOVQ b+24(FP), DI
	MOVOU (SI), Y1
	MOVOU (DI), Y2
	VMOVUPS Y2, Y1
	MOVOU Y1, (SI)
	RET
	

TEXT ·VMOVUPSm256float32(SB),NOSPLIT,$0-48
	
	MOVQ a+0(FP), SI
	MOVQ b+24(FP), DI
	MOVOU (SI), Y1
	MOVOU (DI), Y2
	VMOVUPS Y2, Y1
	MOVOU Y1, (SI)
	RET
	


TEXT ·VPABSBm128byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VPABSB X2, X1
	RETX1X2
	


TEXT ·VPABSDm128byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VPABSD X2, X1
	RETX1X2
	


TEXT ·VPABSWm128byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VPABSW X2, X1
	RETX1X2
	


TEXT ·VPHMINPOSUWm128byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VPHMINPOSUW X2, X1
	RETX1X2
	


TEXT ·VPMOVSXBDm32byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VPMOVSXBD X2, X1
	RETX1X2
	


TEXT ·VPMOVSXBQm16byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VPMOVSXBQ X2, X1
	RETX1X2
	


TEXT ·VPMOVSXBWm64byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VPMOVSXBW X2, X1
	RETX1X2
	


TEXT ·VPMOVSXDQm64byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VPMOVSXDQ X2, X1
	RETX1X2
	


TEXT ·VPMOVSXWDm64byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VPMOVSXWD X2, X1
	RETX1X2
	


TEXT ·VPMOVSXWQm32byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VPMOVSXWQ X2, X1
	RETX1X2
	


TEXT ·VPMOVZXBDm32byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VPMOVZXBD X2, X1
	RETX1X2
	


TEXT ·VPMOVZXBQm16byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VPMOVZXBQ X2, X1
	RETX1X2
	


TEXT ·VPMOVZXBWm64byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VPMOVZXBW X2, X1
	RETX1X2
	


TEXT ·VPMOVZXDQm64byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VPMOVZXDQ X2, X1
	RETX1X2
	


TEXT ·VPMOVZXWDm64byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VPMOVZXWD X2, X1
	RETX1X2
	


TEXT ·VPMOVZXWQm32byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VPMOVZXWQ X2, X1
	RETX1X2
	


TEXT ·VPTESTm128byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VPTEST X2, X1
	RETX1X2
	


TEXT ·VPTESTm256byte(SB),NOSPLIT,$0-48
	
	MOVQ a+0(FP), SI
	MOVQ b+24(FP), DI
	MOVOU (SI), Y1
	MOVOU (DI), Y2
	VPTEST Y2, Y1
	MOVOU Y1, (SI)
	RET
	


TEXT ·VRCPPSm128byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VRCPPS X2, X1
	RETX1X2
	

TEXT ·VRCPPSm128float32(SB),NOSPLIT,$0-48
	FPTOX1X2
	VRCPPS X2, X1
	RETX1X2
	


TEXT ·VRCPPSm256byte(SB),NOSPLIT,$0-48
	
	MOVQ a+0(FP), SI
	MOVQ b+24(FP), DI
	MOVOU (SI), Y1
	MOVOU (DI), Y2
	VRCPPS Y2, Y1
	MOVOU Y1, (SI)
	RET
	

TEXT ·VRCPPSm256float32(SB),NOSPLIT,$0-48
	
	MOVQ a+0(FP), SI
	MOVQ b+24(FP), DI
	MOVOU (SI), Y1
	MOVOU (DI), Y2
	VRCPPS Y2, Y1
	MOVOU Y1, (SI)
	RET
	


TEXT ·VRSQRTPSm128byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VRSQRTPS X2, X1
	RETX1X2
	

TEXT ·VRSQRTPSm128float32(SB),NOSPLIT,$0-48
	FPTOX1X2
	VRSQRTPS X2, X1
	RETX1X2
	


TEXT ·VRSQRTPSm256byte(SB),NOSPLIT,$0-48
	
	MOVQ a+0(FP), SI
	MOVQ b+24(FP), DI
	MOVOU (SI), Y1
	MOVOU (DI), Y2
	VRSQRTPS Y2, Y1
	MOVOU Y1, (SI)
	RET
	

TEXT ·VRSQRTPSm256float32(SB),NOSPLIT,$0-48
	
	MOVQ a+0(FP), SI
	MOVQ b+24(FP), DI
	MOVOU (SI), Y1
	MOVOU (DI), Y2
	VRSQRTPS Y2, Y1
	MOVOU Y1, (SI)
	RET
	


TEXT ·VSQRTPDm128byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VSQRTPD X2, X1
	RETX1X2
	

TEXT ·VSQRTPDm128float64(SB),NOSPLIT,$0-48
	FPTOX1X2
	VSQRTPD X2, X1
	RETX1X2
	


TEXT ·VSQRTPDm256byte(SB),NOSPLIT,$0-48
	
	MOVQ a+0(FP), SI
	MOVQ b+24(FP), DI
	MOVOU (SI), Y1
	MOVOU (DI), Y2
	VSQRTPD Y2, Y1
	MOVOU Y1, (SI)
	RET
	

TEXT ·VSQRTPDm256float64(SB),NOSPLIT,$0-48
	
	MOVQ a+0(FP), SI
	MOVQ b+24(FP), DI
	MOVOU (SI), Y1
	MOVOU (DI), Y2
	VSQRTPD Y2, Y1
	MOVOU Y1, (SI)
	RET
	


TEXT ·VSQRTPSm128byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VSQRTPS X2, X1
	RETX1X2
	

TEXT ·VSQRTPSm128float32(SB),NOSPLIT,$0-48
	FPTOX1X2
	VSQRTPS X2, X1
	RETX1X2
	


TEXT ·VSQRTPSm256byte(SB),NOSPLIT,$0-48
	
	MOVQ a+0(FP), SI
	MOVQ b+24(FP), DI
	MOVOU (SI), Y1
	MOVOU (DI), Y2
	VSQRTPS Y2, Y1
	MOVOU Y1, (SI)
	RET
	

TEXT ·VSQRTPSm256float32(SB),NOSPLIT,$0-48
	
	MOVQ a+0(FP), SI
	MOVQ b+24(FP), DI
	MOVOU (SI), Y1
	MOVOU (DI), Y2
	VSQRTPS Y2, Y1
	MOVOU Y1, (SI)
	RET
	


TEXT ·VTESTPDm128byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VTESTPD X2, X1
	RETX1X2
	


TEXT ·VTESTPDm256byte(SB),NOSPLIT,$0-48
	
	MOVQ a+0(FP), SI
	MOVQ b+24(FP), DI
	MOVOU (SI), Y1
	MOVOU (DI), Y2
	VTESTPD Y2, Y1
	MOVOU Y1, (SI)
	RET
	


TEXT ·VTESTPSm128byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VTESTPS X2, X1
	RETX1X2
	


TEXT ·VTESTPSm256byte(SB),NOSPLIT,$0-48
	
	MOVQ a+0(FP), SI
	MOVQ b+24(FP), DI
	MOVOU (SI), Y1
	MOVOU (DI), Y2
	VTESTPS Y2, Y1
	MOVOU Y1, (SI)
	RET
	


TEXT ·VUCOMISDm64byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VUCOMISD X2, X1
	RETX1X2
	

TEXT ·VUCOMISDm64float64(SB),NOSPLIT,$0-48
	FPTOX1X2
	VUCOMISD X2, X1
	RETX1X2
	


TEXT ·VUCOMISSm32byte(SB),NOSPLIT,$0-48
	FPTOX1X2
	VUCOMISS X2, X1
	RETX1X2
	

TEXT ·VUCOMISSm32float32(SB),NOSPLIT,$0-48
	FPTOX1X2
	VUCOMISS X2, X1
	RETX1X2
	


